* Todo List

*** Developing code
Definition stage
- [X] Floor perimeter
- [X] UDL
- [X] Grids from dxf
- [X] Test that load and mass classes work as intended
- [X] Section class
- [X] Material class
Visualization
- [X] Visualize floor regions and UDLs
- [ ] Visualize element loads and point masses
- [ ] Be able to plot partially defined models (no elements or no floor perimeter for example)
Analysis stage
- [ ] Distribute UDLs to beams
- [ ] Prepare loads to pass to OpenSees
- [ ] Prepare masses to pass to OpenSees
- [ ] Create an `Analysis` class that handles the interaction with OpenSees given a locked model
- [ ] Define the model in OpenSees

*** Things to test
- [ ] Test that two identical UDLs raise an error on a single level
- [ ] Assert that two identical UDLs on different levels do not cause an error

*** Organizing existing code
- [X] Change input arguments to include tuples
- [X] Consider changing dataclass arguments to dictionaries, to reduce the number of arguments

* General Plan

*** High priority

- [ ] Be able to create a 3D OpenSeesPy model of a fiber-section steel building. Direct beam-column connections, no offsets. Rigid diaphragm constraints. No support for modification of the defined elements. No load case support. Automatic load and mass distribution.
- [ ] Modal analysis
- [ ] Gravity load case analysis
- [ ] NL Pushover analysis
- [ ] NL time-history analysis
- [ ]

*** Medium priority

- [ ] Visualizing deformed shapes
- [ ] Visualizing element forces
- [ ] Basic modifications of previously defined elements (deletion, splitting etc)
- [ ] Replicate finished levels upwards
- [ ]

**** Low priority

- [ ] PBEE integration
- [ ] Load combination support
- [ ] Code-based design
- [ ] Synthetic ground-motion generation
- [ ] Incremental dynamic analysis support
- [ ] Read-the-docs-style documentation
