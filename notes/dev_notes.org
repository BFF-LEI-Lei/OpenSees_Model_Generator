
* Todo List

*** Developing code
Definition stage
- [X] Floor perimeter
- [X] UDL
- [X] Grids from dxf
- [X] Test that load and mass classes work as intended
- [X] Section class
- [X] Material class
Visualization
- [X] Visualize floor regions and UDLs
- [ ] Visualize element loads and point masses
- [ ] Be able to plot partially defined models (no elements or no floor perimeter for example)


Analysis stage
- [-] Sections
  - [X] Read sections data and convert to a mesh
  - [ ] Obtain geometric properties from the mesh
- [-] Loads
  - [X] Distribute sUDLs to supporting beams
  - [ ] Apply element self-weight as nodal loads
- [ ] Mass
  - [ ] For each level:
    - [ ] Calculate center of mass from the floor perimter
    - [ ] Calculate center of mass from the rest of the model
      - [ ] For each element
	- [ ] Get self weight
	- [ ] Divide by two, and for each connecting node
	  - [ ] store the temporary mass value in a dict using node uniq_id
    - [ ] Combine to get the global center of mass and the mass value
    - [ ] Calculate the moment of inertia around the center of mass
    - [ ] Define a master node and assign the mass
    - [ ] (The rest of the nodes will be modeled as massless)

- [ ] Create an `Analysis` class that handles the interaction with OpenSees given a locked model
- [ ] Define the model in OpenSees

*** Things to test
- [ ] Test that two identical UDLs raise an error on a single level
- [ ] Assert that two identical UDLs on different levels do not cause an error

*** Organizing existing code
- [X] Change input arguments to include tuples
- [X] Consider changing dataclass arguments to dictionaries, to reduce the number of arguments

* General Plan

*** High priority

- [ ] Be able to create a 3D OpenSeesPy model of a linear elastic steel building. Direct beam-column connections, no offsets. Rigid diaphragm constraints. No support for modification of the defined elements. No load case support. Automatic load and mass distribution.
  - [ ] Modal analysis
  - [ ] Gravity load case analysis
  - [ ] NL Pushover analysis
  - [ ] NL time-history analysis
- [ ] Expand to support displacement based fiber section beam-column elements
- [ ] Add support for automatic element offsets

*** Medium priority

- [ ] Visualizing frame and floor extrusions
- [ ] Visualizing deformed shapes
- [ ] Visualizing element forces
- [ ] Subasemblies:
  - [ ] Automated braces: X, Chevron, BRB
  - [ ] [Optional] Automated truss (for fun)
- [ ] Non-supporting beams (that don't take any load from the slab)
- [ ] Basic modifications of previously defined elements (deletion, splitting etc)
- [ ] Replicate finished levels upwards
- [ ] Speed up code
  - [ ] Check for identical floors when distributing loads

**** Low priority

- [ ] PBEE integration
- [ ] Load combination support
- [ ] Code-based design
- [ ] Synthetic ground-motion generation
- [ ] Incremental dynamic analysis support
- [ ] Read-the-docs-style documentation
